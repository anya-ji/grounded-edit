--- ./data/marketing_slide_27/iter_3/gpt-4o/code.py	2025-02-14 20:55:04.460466294 +0000
+++ ./data/marketing_slide_27/iter_4/gpt-4o/code.py	2025-02-14 20:55:31.667416659 +0000
@@ -2,6 +2,7 @@
 from pptx.util import Inches, Pt
 from pptx.dml.color import RGBColor
 from pptx.enum.shapes import MSO_SHAPE
+import math
 
 # Create a presentation object
 presentation = Presentation()
@@ -27,24 +28,27 @@
     "../../media/image_2.jpg"
 ]
 
-# Define circle positions and sizes
+# Define circular layout positions
+center_x = Inches(8)
+center_y = Inches(4.5)
+radius = Inches(3.5)
+circle_size = Inches(2.5)
+
+# Calculate circular positions
 circle_positions = [
-    (Inches(2), Inches(1.5)),
-    (Inches(5), Inches(1.5)),
-    (Inches(8), Inches(1.5)),
-    (Inches(11), Inches(1.5)),
-    (Inches(6.5), Inches(5))
+    (center_x + radius * math.cos(2 * math.pi * i / len(image_paths)),
+     center_y + radius * math.sin(2 * math.pi * i / len(image_paths)))
+    for i in range(len(image_paths))
 ]
-circle_size = Inches(2.5)
 
 # Add circular image frames
 for image_path, position in zip(image_paths, circle_positions):
     left, top = position
     # Add the picture and apply the circular mask
-    pic = slide.shapes.add_picture(image_path, left, top, circle_size, circle_size)
+    pic = slide.shapes.add_picture(image_path, left - circle_size / 2, top - circle_size / 2, circle_size, circle_size)
     
     # Create a transparent circle mask
-    shape = slide.shapes.add_shape(MSO_SHAPE.OVAL, left, top, circle_size, circle_size)
+    shape = slide.shapes.add_shape(MSO_SHAPE.OVAL, left - circle_size / 2, top - circle_size / 2, circle_size, circle_size)
     shape.fill.solid()
     shape.fill.fore_color.rgb = RGBColor(255, 255, 255)  # Set to white instead of black
     shape.fill.background()  # Make the shape transparent
